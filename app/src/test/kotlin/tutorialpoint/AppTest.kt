/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package tutorialpoint

import kotlin.test.Test
import kotlin.test.assertNotNull
import kotlin.test.assertFails
import kotlin.test.assertEquals
import tutorialpoint.ch02.*
class AppTest {
    @Test fun appHasAGreeting() {
        val classUnderTest = App()
        assertNotNull(classUnderTest.greeting, "app should have a greeting")
    }
    @Test fun isSorted() {
        assert(isSorted(listOf(3,2,1), order))
    }
    @Test fun isSorted2() {
        assert(!isSorted(listOf(3,2,1,11), order))
    }
    @Test fun isSortedTailrec() {
        assert(isSortedRec(listOf(3,2,1), order))
    }
    @Test fun isSortedTailrec2() {
        assert(!isSortedRec(listOf(2,2,1), order))
    }
    @Test fun formatFactorial() {
        assertEquals(Example.formatAbs(-42), "The absolute value of -42 is 42")
    }
    @Test fun formatFactorial2() {
        assertEquals(Example.formatFactorial(5), "The factorial of 5 is 120")
    }
    @Test fun fibo1() {
        assertEquals(fibo(3), 2)
        assertEquals(fibo(4), 3)
        assertEquals(fibo(10), 55)
        assertEquals(fiboRec(3), 2)
        assertEquals(fiboRec(10), 55)
    }
    @Test fun currying() {
        val addFunc = {a: Int, b: Int -> a + b}
        val multiFunc = {a: Int, b: Int -> a * b}
        val curryedSum = curry(addFunc)
        val curryedMulti = curry(multiFunc)
        assertEquals(curryedSum(1)(2), 3)
        assertEquals(curryedMulti(1)(2), 2)
    }
    @Test fun uncurrying() {
        val addFunc = {a: Int, b: Int -> a + b}
        val curryedSum = curry(addFunc)
        val uncurryiedSum = uncurry(curryedSum)
        assertEquals(uncurryiedSum(2,3), 5)
    }
    @Test fun `composing`() {
        val plusOne = {x: Int -> x + 1}
        val multTwo = {x: Int -> x * 2}
        val composedOnePlusTwoMult = compose(plusOne, multTwo)
        val composedOnePlusTwoMultLeftRight = composeLeftRight(plusOne, multTwo)
        assertEquals(composedOnePlusTwoMult(4), 9)
        assertEquals(composedOnePlusTwoMultLeftRight(4), 10)
    }
}
